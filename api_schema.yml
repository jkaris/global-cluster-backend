openapi: 3.0.3
info:
  title: Global Cluster Backend
  version: 1.0.0
  description: Backend for Global Cluster
paths:
  /api/v1/accounts/companies/:
    get:
      operationId: accounts_companies_list
      tags:
      - accounts
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyProfile'
          description: ''
    post:
      operationId: accounts_companies_create
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompanyProfile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CompanyProfile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CompanyProfile'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyProfile'
          description: ''
  /api/v1/accounts/companies/{user}/:
    get:
      operationId: accounts_companies_retrieve
      parameters:
      - in: path
        name: user
        schema:
          type: integer
        description: A unique value identifying this Company Profile.
        required: true
      tags:
      - accounts
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyProfile'
          description: ''
    put:
      operationId: accounts_companies_update
      parameters:
      - in: path
        name: user
        schema:
          type: integer
        description: A unique value identifying this Company Profile.
        required: true
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompanyProfile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CompanyProfile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CompanyProfile'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyProfile'
          description: ''
    patch:
      operationId: accounts_companies_partial_update
      parameters:
      - in: path
        name: user
        schema:
          type: integer
        description: A unique value identifying this Company Profile.
        required: true
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCompanyProfile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCompanyProfile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCompanyProfile'
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyProfile'
          description: ''
    delete:
      operationId: accounts_companies_destroy
      parameters:
      - in: path
        name: user
        schema:
          type: integer
        description: A unique value identifying this Company Profile.
        required: true
      tags:
      - accounts
      security:
      - jwtAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/v1/accounts/individuals/:
    get:
      operationId: accounts_individuals_list
      tags:
      - accounts
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IndividualProfile'
          description: ''
    post:
      operationId: accounts_individuals_create
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IndividualProfile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/IndividualProfile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/IndividualProfile'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IndividualProfile'
          description: ''
  /api/v1/accounts/individuals/{user}/:
    get:
      operationId: accounts_individuals_retrieve
      parameters:
      - in: path
        name: user
        schema:
          type: integer
        description: A unique value identifying this Individual Profile.
        required: true
      tags:
      - accounts
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IndividualProfile'
          description: ''
    put:
      operationId: accounts_individuals_update
      parameters:
      - in: path
        name: user
        schema:
          type: integer
        description: A unique value identifying this Individual Profile.
        required: true
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IndividualProfile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/IndividualProfile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/IndividualProfile'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IndividualProfile'
          description: ''
    patch:
      operationId: accounts_individuals_partial_update
      parameters:
      - in: path
        name: user
        schema:
          type: integer
        description: A unique value identifying this Individual Profile.
        required: true
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedIndividualProfile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedIndividualProfile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedIndividualProfile'
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IndividualProfile'
          description: ''
    delete:
      operationId: accounts_individuals_destroy
      parameters:
      - in: path
        name: user
        schema:
          type: integer
        description: A unique value identifying this Individual Profile.
        required: true
      tags:
      - accounts
      security:
      - jwtAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/v1/accounts/token/:
    post:
      operationId: accounts_token_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''
  /api/v1/accounts/token/refresh/:
    post:
      operationId: accounts_token_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /api/v1/referrals/products/:
    get:
      operationId: referrals_products_list
      description: ViewSet for the Product model.
      tags:
      - referrals
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
          description: ''
    post:
      operationId: referrals_products_create
      description: ViewSet for the Product model.
      tags:
      - referrals
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Product'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Product'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
  /api/v1/referrals/products/{uuid}/:
    get:
      operationId: referrals_products_retrieve
      description: ViewSet for the Product model.
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Product.
        required: true
      tags:
      - referrals
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
    put:
      operationId: referrals_products_update
      description: ViewSet for the Product model.
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Product.
        required: true
      tags:
      - referrals
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Product'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Product'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
    patch:
      operationId: referrals_products_partial_update
      description: ViewSet for the Product model.
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Product.
        required: true
      tags:
      - referrals
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProduct'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProduct'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProduct'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
    delete:
      operationId: referrals_products_destroy
      description: ViewSet for the Product model.
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Product.
        required: true
      tags:
      - referrals
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/referrals/supporttickets/:
    get:
      operationId: referrals_supporttickets_list
      description: ViewSet for the SupportTicket model.
      tags:
      - referrals
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SupportTicket'
          description: ''
    post:
      operationId: referrals_supporttickets_create
      description: ViewSet for the SupportTicket model.
      tags:
      - referrals
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SupportTicket'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SupportTicket'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SupportTicket'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SupportTicket'
          description: ''
  /api/v1/referrals/supporttickets/{uuid}/:
    get:
      operationId: referrals_supporttickets_retrieve
      description: ViewSet for the SupportTicket model.
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Support Ticket.
        required: true
      tags:
      - referrals
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SupportTicket'
          description: ''
    put:
      operationId: referrals_supporttickets_update
      description: ViewSet for the SupportTicket model.
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Support Ticket.
        required: true
      tags:
      - referrals
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SupportTicket'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SupportTicket'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SupportTicket'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SupportTicket'
          description: ''
    patch:
      operationId: referrals_supporttickets_partial_update
      description: ViewSet for the SupportTicket model.
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Support Ticket.
        required: true
      tags:
      - referrals
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSupportTicket'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSupportTicket'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSupportTicket'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SupportTicket'
          description: ''
    delete:
      operationId: referrals_supporttickets_destroy
      description: ViewSet for the SupportTicket model.
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Support Ticket.
        required: true
      tags:
      - referrals
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/referrals/userrankings/:
    get:
      operationId: referrals_userrankings_list
      description: ViewSet for the UserRanking model.
      tags:
      - referrals
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserRanking'
          description: ''
    post:
      operationId: referrals_userrankings_create
      description: ViewSet for the UserRanking model.
      tags:
      - referrals
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRanking'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserRanking'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserRanking'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserRanking'
          description: ''
  /api/v1/referrals/userrankings/{id}/:
    get:
      operationId: referrals_userrankings_retrieve
      description: ViewSet for the UserRanking model.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this User Ranking.
        required: true
      tags:
      - referrals
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserRanking'
          description: ''
    put:
      operationId: referrals_userrankings_update
      description: ViewSet for the UserRanking model.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this User Ranking.
        required: true
      tags:
      - referrals
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRanking'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserRanking'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserRanking'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserRanking'
          description: ''
    patch:
      operationId: referrals_userrankings_partial_update
      description: ViewSet for the UserRanking model.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this User Ranking.
        required: true
      tags:
      - referrals
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserRanking'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserRanking'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserRanking'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserRanking'
          description: ''
    delete:
      operationId: referrals_userrankings_destroy
      description: ViewSet for the UserRanking model.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this User Ranking.
        required: true
      tags:
      - referrals
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/referrals/verify/:
    get:
      operationId: referrals_verify_retrieve
      description: Retrieves account information from an external API based on the
        provided account number and bank code.
      tags:
      - referrals
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerifyAccount'
          description: ''
components:
  schemas:
    CompanyProfile:
      type: object
      properties:
        company_name:
          type: string
          maxLength: 100
        company_registration_number:
          type: string
          maxLength: 50
        phone_number:
          type: string
          maxLength: 15
        address:
          type: string
          maxLength: 255
        country:
          type: string
          maxLength: 50
        user:
          $ref: '#/components/schemas/CustomUser'
      required:
      - address
      - company_name
      - company_registration_number
      - country
      - phone_number
      - user
    CustomUser:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        email:
          type: string
          format: email
          maxLength: 254
        name:
          type: string
          maxLength: 100
        user_type:
          $ref: '#/components/schemas/UserTypeEnum'
        password:
          type: string
          writeOnly: true
        profile_picture:
          type: string
          format: uri
          nullable: true
      required:
      - email
      - id
      - name
      - user_type
    GenderEnum:
      enum:
      - male
      - female
      type: string
      description: |-
        * `male` - Male
        * `female` - Female
    IndividualProfile:
      type: object
      properties:
        first_name:
          type: string
          maxLength: 30
        last_name:
          type: string
          maxLength: 30
        gender:
          $ref: '#/components/schemas/GenderEnum'
        phone_number:
          type: string
          maxLength: 15
        address:
          type: string
          maxLength: 255
        country:
          type: string
          maxLength: 50
        state:
          type: string
          maxLength: 50
        city:
          type: string
          maxLength: 50
        user:
          $ref: '#/components/schemas/CustomUser'
      required:
      - address
      - city
      - country
      - first_name
      - gender
      - last_name
      - phone_number
      - state
      - user
    NameEnum:
      enum:
      - gold pro
      - gold
      - silver pro
      - silver
      - platinum
      type: string
      description: |-
        * `gold pro` - Gold Pro
        * `gold` - Gold
        * `silver pro` - Silver Pro
        * `silver` - Silver
        * `platinum` - Platinum
    PatchedCompanyProfile:
      type: object
      properties:
        company_name:
          type: string
          maxLength: 100
        company_registration_number:
          type: string
          maxLength: 50
        phone_number:
          type: string
          maxLength: 15
        address:
          type: string
          maxLength: 255
        country:
          type: string
          maxLength: 50
        user:
          $ref: '#/components/schemas/CustomUser'
    PatchedIndividualProfile:
      type: object
      properties:
        first_name:
          type: string
          maxLength: 30
        last_name:
          type: string
          maxLength: 30
        gender:
          $ref: '#/components/schemas/GenderEnum'
        phone_number:
          type: string
          maxLength: 15
        address:
          type: string
          maxLength: 255
        country:
          type: string
          maxLength: 50
        state:
          type: string
          maxLength: 50
        city:
          type: string
          maxLength: 50
        user:
          $ref: '#/components/schemas/CustomUser'
    PatchedProduct:
      type: object
      description: Serializer for the Product model.
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        product_name:
          type: string
          maxLength: 255
        date_created:
          type: string
          format: date-time
          readOnly: true
        date_updated:
          type: string
          format: date-time
          readOnly: true
        description:
          type: string
        product_image:
          type: string
          format: uri
          nullable: true
          pattern: (?:png|jpg|jpeg|tiff)$
        product_value:
          $ref: '#/components/schemas/ProductValueEnum'
        product_link:
          type: string
          maxLength: 255
        status:
          $ref: '#/components/schemas/ProductStatusEnum'
        shares:
          type: integer
          maximum: 1000000000
          minimum: 0
        traffic:
          type: integer
          maximum: 1000000000
          minimum: 0
        company:
          type: integer
    PatchedSupportTicket:
      type: object
      description: Serializer for the SupportTicket model.
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        date_created:
          type: string
          format: date-time
          readOnly: true
        date_updated:
          type: string
          format: date-time
          readOnly: true
        support:
          $ref: '#/components/schemas/SupportEnum'
        title:
          type: string
          maxLength: 255
        description:
          type: string
        status:
          $ref: '#/components/schemas/SupportTicketStatusEnum'
        priority:
          $ref: '#/components/schemas/PriorityEnum'
        attachments:
          type: string
          format: uri
          nullable: true
          pattern: (?:png|jpg|jpeg|tiff|pdf)$
        submitted_by:
          type: integer
    PatchedUserRanking:
      type: object
      description: Serializer for the UserRanking model.
      properties:
        id:
          type: integer
          readOnly: true
        icon:
          type: string
          format: uri
        user:
          type: string
          maxLength: 255
        rank_level:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        name:
          $ref: '#/components/schemas/NameEnum'
        total_recruits:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        bonus:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        status:
          $ref: '#/components/schemas/UserRankingStatusEnum'
        date:
          type: string
          format: date-time
          readOnly: true
    PriorityEnum:
      enum:
      - high
      - medium
      - low
      type: string
      description: |-
        * `high` - High
        * `medium` - Medium
        * `low` - Low
    Product:
      type: object
      description: Serializer for the Product model.
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        product_name:
          type: string
          maxLength: 255
        date_created:
          type: string
          format: date-time
          readOnly: true
        date_updated:
          type: string
          format: date-time
          readOnly: true
        description:
          type: string
        product_image:
          type: string
          format: uri
          nullable: true
          pattern: (?:png|jpg|jpeg|tiff)$
        product_value:
          $ref: '#/components/schemas/ProductValueEnum'
        product_link:
          type: string
          maxLength: 255
        status:
          $ref: '#/components/schemas/ProductStatusEnum'
        shares:
          type: integer
          maximum: 1000000000
          minimum: 0
        traffic:
          type: integer
          maximum: 1000000000
          minimum: 0
        company:
          type: integer
      required:
      - company
      - date_created
      - date_updated
      - description
      - product_link
      - product_name
      - uuid
    ProductStatusEnum:
      enum:
      - pending
      - active
      - declined
      type: string
      description: |-
        * `pending` - Pending
        * `active` - Active
        * `declined` - Declined
    ProductValueEnum:
      enum:
      - whatsapp
      - phone
      - website
      type: string
      description: |-
        * `whatsapp` - Whatsapp
        * `phone` - Phone
        * `website` - Website
    SupportEnum:
      enum:
      - support
      - suggestion
      type: string
      description: |-
        * `support` - Support
        * `suggestion` - Suggestion
    SupportTicket:
      type: object
      description: Serializer for the SupportTicket model.
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        date_created:
          type: string
          format: date-time
          readOnly: true
        date_updated:
          type: string
          format: date-time
          readOnly: true
        support:
          $ref: '#/components/schemas/SupportEnum'
        title:
          type: string
          maxLength: 255
        description:
          type: string
        status:
          $ref: '#/components/schemas/SupportTicketStatusEnum'
        priority:
          $ref: '#/components/schemas/PriorityEnum'
        attachments:
          type: string
          format: uri
          nullable: true
          pattern: (?:png|jpg|jpeg|tiff|pdf)$
        submitted_by:
          type: integer
      required:
      - date_created
      - date_updated
      - description
      - submitted_by
      - title
      - uuid
    SupportTicketStatusEnum:
      enum:
      - in-progress
      - resolved
      type: string
      description: |-
        * `in-progress` - In Progress
        * `resolved` - Resolved
    TokenObtainPair:
      type: object
      properties:
        email:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          readOnly: true
      required:
      - access
      - email
      - password
      - refresh
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          writeOnly: true
      required:
      - access
      - refresh
    UserRanking:
      type: object
      description: Serializer for the UserRanking model.
      properties:
        id:
          type: integer
          readOnly: true
        icon:
          type: string
          format: uri
        user:
          type: string
          maxLength: 255
        rank_level:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        name:
          $ref: '#/components/schemas/NameEnum'
        total_recruits:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        bonus:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        status:
          $ref: '#/components/schemas/UserRankingStatusEnum'
        date:
          type: string
          format: date-time
          readOnly: true
      required:
      - date
      - icon
      - id
      - user
    UserRankingStatusEnum:
      enum:
      - enabled
      - disabled
      type: string
      description: |-
        * `enabled` - Enabled
        * `disabled` - Disabled
    UserTypeEnum:
      enum:
      - individual
      - company
      - admin
      type: string
      description: |-
        * `individual` - Individual
        * `company` - Company
        * `admin` - Admin
    VerifyAccount:
      type: object
      description: Serializer for verifying an account.
      properties:
        account_number:
          type: string
          maxLength: 20
        bank_code:
          type: string
          maxLength: 10
        account_name:
          type: string
          readOnly: true
          maxLength: 255
        first_name:
          type: string
          readOnly: true
          maxLength: 255
        last_name:
          type: string
          readOnly: true
          maxLength: 255
        other_name:
          type: string
          readOnly: true
          maxLength: 255
        bank_name:
          type: string
          readOnly: true
          maxLength: 255
      required:
      - account_name
      - account_number
      - bank_code
      - bank_name
      - first_name
      - last_name
      - other_name
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
